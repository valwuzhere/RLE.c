#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>



        void decode(char sTring[40]){
		int i;
		int j;
		int siz = strlen(sTring)-2;		   // here i am making sure i+1 is never out of range
		for(i=0; i<siz; i++){
			j = 0;
			if(sTring[i+1] == 49){             // these if statements convert from the ANSCII values from the file to
				sTring[i+1] = 1;           // the decimal values that are needed to decode
			}else if(sTring[i+1] == 50){ 
				sTring[i+1] = 2;
			}else if(sTring[i+1]== 51){
				sTring[i+1] = 3;
			}else if(sTring[i+1]== 52){
                                sTring[i+1] = 4;
                        }else if(sTring[i+1]== 53){
                                sTring[i+1] = 5;
                        }else if(sTring[i+1]== 54){
                                sTring[i+1] = 6;
                        }else if(sTring[i+1]== 55){
                                sTring[i+1] = 7;
                        }else if(sTring[i+1]== 56){
                                sTring[i+1] = 8;
                        }else if(sTring[i+1]== 57){
                                sTring[i+1] = 9;
                        }else if(sTring[i+1]== 48){
                                sTring[i+1] = 0;
                        }
				
			while(j<sTring[i+1]){
				printf("%c", sTring[i]);    // the j accounts for the number succeeding the letter
				j++;
		
			}
			i++;
    		 }
		printf("\n");
	}





        void encode(char sTring[40]){
		int counter = 1;
		int i;                                  
		int size = strlen(sTring)-1;                // I made it one less than size so it doesn't print the ending 0
                for(i=0; i<size; i++){                                
			if(sTring[i] == sTring[i+1] && (i+1)< size ){    // comparing the elements of the sTring array to see if they
			counter++;                                       // are equal
			} else {
			printf("%c%d", sTring[i], counter);
			counter = 1;
			}
			
		}
		printf("\n");
		exit(0);
	}	


int main (int argc, char **argv){

	char sTring[40];

	FILE *fptr;
	fptr = fopen( argv[1], "r");                      // starts reading the file

	if(!argv[1]){                                         // checks if filename is provided
		printf("Error: No input file specified! \n");
		exit(1);
	} else if(!(fptr = fopen(argv[1], "r"))){                    // checks if file exists and if it can be opened
		printf("Read error: file not found or cannot be read \n");
		exit(2);
	} 


	while(fgets(sTring, 40, fptr) != NULL){                       // converting file contents into a string
	int i;
	int sz = strlen(sTring)-1;
	
	for(i=0; i<sz; i++){
		if(islower(sTring[i])){
			printf("Error: String could not be encoded \n");  // checks for lowercase letters
			exit(5);
		}else if(sTring[i] == 32 && 48 <= sTring[i+1]<=122){              // checks for any characters after whitespace
			printf("Error: String could not be encoded \n");
                        exit(5);
		}	
	} 
	if(strcmp(argv[2], "e")== 0){
                encode(sTring);

        } else if(strcmp(argv[2], "d")== 0){
                decode(sTring);

        } else{
                printf("Invalid Usage, expected: RLE {filename} [e | d} \n");
                exit(4);
        }

		fclose(fptr);                         // closes file to prevent any memory issues
	}



	return 0;

}
